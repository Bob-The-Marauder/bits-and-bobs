#!/bin/bash
## Start with sysctl settings by checking if vm.swappiness has been set to 0
sysctl=$(grep "vm.swappiness = 0" /etc/sysctl.conf)
if [[ $sysctl ]] ; then
  echo "Sysctl settings already completed, skipping"
else
  echo "Tuning sysctl settings..."
  ## Disable swapping
  echo "vm.swappiness = 0" >> /etc/sysctl.conf
  ## Varios kernel and network tuning
  echo "net.ipv4.tcp_max_syn_backlog = 40000" >> /etc/sysctl.conf
  echo "net.core.somaxconn = 40000" >> /etc/sysctl.conf
  echo "net.core.wmem_default = 8388608" >> /etc/sysctl.conf
  echo "net.core.rmem_default = 8388608" >> /etc/sysctl.conf
  echo "net.ipv4.tcp_sack = 1" >> /etc/sysctl.conf
  echo "net.ipv4.tcp_window_scaling = 1" >> /etc/sysctl.conf
  echo "net.ipv4.tcp_fin_timeout = 15" >> /etc/sysctl.conf
  echo "net.ipv4.tcp_keepalive_intvl = 30" >> /etc/sysctl.conf
  echo "net.ipv4.tcp_tw_reuse = 1" >> /etc/sysctl.conf
  echo "net.ipv4.tcp_moderate_rcvbuf = 1" >> /etc/sysctl.conf
  ## Optional VM tuning to reduce I/O issues
  echo "vm.dirty_background_ratio = 0" >> /etc/sysctl.conf
  echo "vm.dirty_background_bytes = 209715200" >> /etc/sysctl.conf
  echo "vm.dirty_ratio = 40" >> /etc/sysctl.conf
  echo "vm.dirty_bytes = 0" >> /etc/sysctl.conf
  echo "vm.dirty_writeback_centisecs = 100" >> /etc/sysctl.conf
  echo "vm.dirty_expire_centisecs = 200" >> /etc/sysctl.conf
fi
echo "Tuning schedulers for magnetic media..."
## Change the disk scheduler to noop for magnetic media
echo deadline > /sys/block/sda/queue/scheduler
## Boost the scheduler depth to 1024 to improve disk I/O
echo 1024 > /sys/block/sda/queue/nr_requests
## Add the entry to /etc/fstab that tells the Pi to mount the USB magnetic disk at /var/lib/riak with a tuned mountnig if not already set
disk=$(grep "sda1" /etc/fstab)
if [[ $disk ]]; then
  echo "Disk already set up in fstab, skipping..."
else
  echo "Setting up disk in fstab..."
  echo "/dev/sda1       /var/lib/riak   ext4    defaults,noatime,barrier=0,data=writeback  0       0" >> /etc/fstab
  ## Mount the disk
  mount -a
  ## Make Riak the owner
  chown -R riak:riak /var/lib/riak
fi
## Set limits if not already set
limits=$(grep "riak" /etc/security/limits.conf)
if [[ $limits ]]; then
  echo "Limits already set up, skipping..."
else
  echo "Setting up limits..."
  sed  -i "s/# End of file//g" /etc/security/limits.conf
  echo "riak    soft    nofile  65536" >> /etc/security/limits.conf
  echo "riak    hard    nofile  200000" >> /etc/security/limits.conf
  echo "#End of file" >> /etc/security/limits.conf
fi
echo "All done!"
